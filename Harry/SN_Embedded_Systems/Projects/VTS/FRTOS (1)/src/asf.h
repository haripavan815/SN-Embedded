/**
 * \file
 *
 * \brief Autogenerated API include file for the Atmel Software Framework (ASF)
 *
 * Copyright (c) 2012 Atmel Corporation. All rights reserved.
 *
 * \asf_license_start
 *
 * \page License
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. The name of Atmel may not be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * 4. This software may only be redistributed and used in connection with an
 *    Atmel microcontroller product.
 *
 * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
 * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \asf_license_stop
 *
 */

#ifndef ASF_H
#define ASF_H

/*
 * This file includes all API header files for the selected drivers from ASF.
 * Note: There might be duplicate includes required by more than one driver.
 *
 * The file is automatically generated and will be re-written when
 * running the ASF driver selector tool. Any changes will be discarded.
 */

// From module: Common SAM compiler driver
#include <compiler.h>
#include <status_codes.h>
#include "ASF/sam/drivers/afec/afec.h"
#include "ADC_Module/Adc.h"
// From module: Delay routines
#include <delay.h>
#include <string.h>
// From module: FreeRTOS mini Real-Time Kernel
#include <FreeRTOS.h>
//#include <FreeRTOS_CLI.h>
#include <Stack_macros.h>
#include <croutine.h>
#include <list.h>
#include <mpu_wrappers.h>
#include <portable.h>
#include <projdefs.h>
#include <queue.h>
#include <semphr.h>
#include <task.h>
#include <timers.h>
#include "ASF/common/services/sleepmgr/sam/sleepmgr.h"
#include "ASF/common/services/sleepmgr/sleepmgr.h"
// From module: GPIO - General purpose Input/Output
#include <gpio.h>
// From module: Generic board support
#include <board.h>
#include "Free-RTOS_Module/frtos_app.h"
// From module: IOPORT - General purpose I/O service
#include <ioport.h>

// From module: Interrupt management - SAM implementation
#include <interrupt.h>

// From module: MPU - Memory Protect Unit
#include <mpu.h>

// From module: PIO - Parallel Input/Output Controller
#include <pio.h>

// From module: PMC - Power Management Controller
#include <pmc.h>
#include <sleep.h>

// From module: Part identification macros
#include <parts.h>

// From module: RSTC - Reset Controller
#include "asf/sam/drivers/rstc/rstc.h"
#include "ASF/sam/drivers/wdt/wdt.h"
// From module: SAM FPU driver
#include <fpu.h>

// From module: SAMV71 XULTRA LED support enabled
#include <led.h>

// From module: Standard serial I/O (stdio) - SAM implementation
#include <stdio_serial.h>

// From module: System Clock Control - SAMV71 implementation
#include <sysclk.h>

// From module: TWI - Two-wire Interface High Speed
//#include "ASF\sam\utils\cmsis\samv71\include\component\twihs.h"
//#include "ASF\sam\drivers\Twih\twih.h"

// From module: UART - Univ. Async Rec/Trans
#include <uart.h>

// From module: USART - Serial interface - SAM implementation for devices with both UART and USART
#include <serial.h>

// From module: USART - Univ. Syn Async Rec/Trans
#include <usart.h>

// From module: XDMAC - XDMA Controller
#include <xdmac.h>

// From module: pio_handler support enabled
#include <pio_handler.h>

#include "UART_Module/uart_app.h"
#include "USART_Module/usart_app.h"
#include "Free-RTOS_Module/frtos_app.h"
#include "LTE_Module/LTE_Comm.h"
#include "LTE_Module/MQTT_Comm.h"
#include "LTE_Module/GPS_Comm.h"
#include "LTE_Module/SMS_Comm.h"
#include "Services_Module/Services.h"
#include "AIS-140_Module/AIS.h"
#include "IMU_Module/VTS_IMU.h"
#include "Memory_Module/VTS_Flash.h"

#endif // ASF_H
